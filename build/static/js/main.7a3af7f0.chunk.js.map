{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["severityColorMap","App","barAttrs","data","attrs","keys","indexBy","margin","top","right","bottom","left","padding","colors","scheme","orderColor","from","modifiers","axisRight","axisTop","tickSize","tickPadding","tickRotation","legend","legendOffset","axisBottom","legendPosition","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","animate","motionStiffness","motionDamping","layout","colros","Object","values","cweData","advisories","reduce","result","adv","concat","cwe","replace","vulnerability","toUpperCase","prototype","hasOwnProperty","call","key","cvss","column","totalCount","count","push","sort","c1","c2","getCWEBarAttributes","vulnerabilities","pieAttrs","innerRadius","padAngle","cornerRadius","borderWidth","borderColor","enableRadialLabels","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","vendor","id","label","value","length","cwe1","cwe2","others","slice","map","item","sum","getCWEPieAttributes","reverse","className","width","textAlign","height","float","boxSizing","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a3af7f0.chunk.js","sourcesContent":["import React from 'react';\nimport { ResponsiveBar } from \"@nivo/bar\";\n\nimport './App.css';\nimport vulnerabilities from './data/vulnerabilities.json';\nimport { ResponsivePie } from '@nivo/pie';\n\nconst severityColorMap = {\n  'very low': '#6c757d',\n  'low': '#007bff',\n  'medium': '#17a2b8',\n  'high': '#ffc107',\n  'very high': '#dc3545',\n};\n\nconst getCWEBarAttributes = (data) => {\n  const attrs = {\n    data: [],\n    keys: [],\n    indexBy: 'cwe',\n    margin: { top: 50, right: 10, bottom: 40, left: 60 },\n    padding: 0.3,\n    colors: { scheme: 'yellow_orange_red' },\n    orderColor: { from: 'color', modifiers: [['darker', 1.6]] },\n    axisRight: null,\n    axisTop: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: '',\n      legendOffset: 36\n    },\n    axisBottom: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legendPosition: 'middle',\n      legendOffset: 32,\n    },\n    axisLeft: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'count',\n      legendPosition: 'middle',\n      legendOffset: -40,\n    },\n    labelSkipWidth: 12,\n    labelSkipHeight: 12,\n    labelTextColor: { from: 'color', modifiers: [['darker', 1.6]] },\n    legends: [\n      {\n        dataFrom: 'keys',\n        anchor: 'top-left',\n        direction: 'row',\n        justify: false,\n        translateX: 0,\n        translateY: -50,\n        itemsSpacing: 2,\n        itemWidth: 100,\n        itemHeight: 20,\n        itemDirection: 'left-to-right',\n        itemOpacity: 0.85,\n        symbolSize: 20,\n        effects: [\n          {\n            on: 'hover',\n            style: {\n              itemOpacity: 1,\n            },\n          },\n        ],\n      },\n    ],\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    layout: 'horizontal',\n    colros: Object.values(severityColorMap),\n  }\n\n  const cweData = {};\n  const advisories = Object.values(data).reduce((result, adv) => result.concat(adv), []);\n\n  for (const adv of advisories) {\n    const cwe = adv.cwe.replace(' ', '');\n    const vulnerability = adv.vulnerability ? adv.vulnerability.toUpperCase() : null;\n\n    if (!Object.prototype.hasOwnProperty.call(cweData, cwe)) {\n      cweData[cwe] = { vulnerability };\n      for (const key in severityColorMap) {\n        cweData[cwe][key] = 0;\n      }\n    }\n\n    let key = '';\n    if (adv.cvss < 2.0) {\n      key = 'very low';\n    } else if (adv.cvss < 4.0) {\n      key = 'low';\n    } else if (adv.cvss < 6.0) {\n      key = 'medium';\n    } else if (adv.cvss < 8.0) {\n      key = 'high';\n    } else {\n      key = 'very high';\n    }\n\n    cweData[cwe][key] += 1;\n  }\n\n  attrs.keys = Object.keys(severityColorMap);\n\n  for (const cwe in cweData) {\n    const column = { cwe };\n    let totalCount = 0;\n    for (const key of attrs.keys) {\n      const count = cweData[cwe][key];\n      totalCount += count;\n      column[key] = count;\n      column[`${key}Color`] = severityColorMap[key];\n    }\n    column.vulnerability = cweData[cwe].vulnerability;\n    column.totalCount = totalCount;\n    attrs.data.push(column);\n  }\n  attrs.data.sort((c1, c2) => c1.totalCount - c2.totalCount);\n  return attrs;\n}\n\nconst getCWEPieAttributes = (data) => {\n  const attrs = {\n    margin: { top: 40, right: 80, bottom: 80, left: 80 },\n    innerRadius: 0.35,\n    padAngle: 0.7,\n    cornerRadius: 3,\n    colors: { scheme: 'nivo' },\n    borderWidth: 1,\n    borderColor: { from: 'color', modifiers: [['darker', 0.2]] },\n    enableRadialLabels: true,\n    radialLabelsSkipAngle: 0,\n    radialLabelsTextXOffset: 6,\n    radialLabelsTextColor: \"#333333\",\n    radialLabelsLinkOffset: 0,\n    radialLabelsLinkDiagonalLength: 16,\n    radialLabelsLinkHorizontalLength: 24,\n    radialLabelsLinkStrokeWidth: 1,\n    radialLabelsLinkColor: { from: 'color' },\n    slicesLabelsSkipAngle: 2,\n    slicesLabelsTextColor: \"#333333\",\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    legends: [],\n  };\n\n  const cweData = [];\n\n  for (const vendor in data) {\n    if (!Object.prototype.hasOwnProperty.call(data, vendor)) {\n      continue;\n    }\n\n    cweData.push({\n      id: vendor,\n      label: vendor,\n      value: data[vendor].length,\n    });\n\n    cweData.sort((cwe1, cwe2) => cwe2.value - cwe1.value);\n    const others = cweData.slice(90);\n    attrs.data = cweData.slice(0, 90);\n    attrs.data.push({\n      id: `others - ${others.length} vendors`,\n      label: `others - ${others.length} vendors`,\n      value: others.map(item => item.value).reduce((sum, value) => sum + value, 0),\n    });\n  }\n  return attrs;\n}\n\n\nconst App = () => {\n  const barAttrs = getCWEBarAttributes(vulnerabilities);\n  const pieAttrs = getCWEPieAttributes(vulnerabilities);\n  const advisories = [...barAttrs.data].reverse();\n\n  return (\n    <div>\n      <div className=\"bar\">\n        <div style={{ width: '100%' }}>\n          <h3 style={{ textAlign: 'center' }}>ICS-CERT Advisories</h3>\n        </div>\n        <div style={{ width: '100%' }}>\n          <div className=\"App\" style={{ width: '55%', height: '5400px', float: 'left' }}>\n            <ResponsiveBar {...barAttrs} />\n          </div>\n          <div style={{ width: '45%', float: 'right' }}>\n            <table style={{ boxSizing: 'border-box', fontSize: '0.8em' }}>\n              <thead>\n                <tr>\n                  <th>CWE</th>\n                  <th>VULNERABILITY</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  advisories.map(adv => (\n                    <tr key={adv.cwe}>\n                      <td>{adv.cwe}</td>\n                      <td>{adv.vulnerability}</td>\n                    </tr>\n                  ))\n                }\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      <div className=\"pie\">\n        <div style={{ width: '100%' }}>\n          <div className=\"App\" style={{ width: '100%', height: '1240px' }}>\n            <ResponsivePie {...pieAttrs}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}